<?xml version="1.0" encoding="utf-8" ?>
<Feature SiLA2Version="1.0" FeatureVersion="1.0" Originator="org.silastandard" Category="test"
         xmlns="http://www.sila-standard.org"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.sila-standard.org https://gitlab.com/SiLA2/sila_base/raw/master/schema/FeatureDefinition.xsd">
    <Identifier>UnobservablePropertyTest</Identifier>
    <DisplayName>Unobservable Property Test</DisplayName>
     <Description>
        This is a test feature to generically test Unobservable properties.
        It specifies various unobservable properties and returns defined answers to validate against.
        We provide three different properties for testing concurrent situations.
        The Server should iterate 1000 times (to produce some load) and return the final count as Integer.
        By that we produce an predictable output/return which could be easily tested.
    </Description>

    <!-- Unobservable Properties -->
    <Property>
        <Identifier>UnobservablePropertyIteration1</Identifier>
        <DisplayName>Unobservable Property iteration no. 1</DisplayName>
        <Description>Unobservable Property iteration no. 1, running 1000 times and returning the current final result.</Description>
        <Observable>No</Observable>
        <DataType>
            <Basic>Integer</Basic>
        </DataType>
    </Property>
    <Property>
        <Identifier>UnobservablePropertyIteration2</Identifier>
        <DisplayName>Unobservable Property iteration no. 2</DisplayName>
        <Description>Unobservable Property iteration no. 2, running 1000 times and returning the final result.</Description>
        <Observable>No</Observable>
        <DataType>
            <Basic>Integer</Basic>
        </DataType>
    </Property>
        <Property>
        <Identifier>UnobservablePropertyIteration3</Identifier>
        <DisplayName>Unobservable Property iteration no. 3</DisplayName>
        <Description>Unobservable Property iteration no. 3, running 1000 times and returning the final result.</Description>
        <Observable>No</Observable>
        <DataType>
            <Basic>Integer</Basic>
        </DataType>
    </Property>

</Feature>